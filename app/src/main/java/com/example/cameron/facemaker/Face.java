/*
This class takes care of drawing the face on the screen. It holds the values for the different
color components of the face as well as generates random colors.
@author Cameron
 */

package com.example.cameron.facemaker;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.view.SurfaceView;

import java.util.Random;

public class Face extends SurfaceView {
    private int skinColor;
    private int eyeColor;
    private int hairColor;
    private int hairStyle; //spike = 1; flat = 2; curved = 3

    public Face(Context ctx, AttributeSet attrs){
        super(ctx, attrs);

        this.setWillNotDraw(false);
        randomize();
    }

    /*
        takes care of drawing the face

        @param canvas   the canvas to draw the face on
     */
    public void onDraw(Canvas canvas){
        canvas.drawColor(Color.BLACK); //clear the canvas
        Paint p;

        p = getPaint(skinColor);
        canvas.drawCircle(500,500,100, p);

        p = getPaint(eyeColor);
        canvas.drawCircle(450, 450, 20, p);
        canvas.drawCircle(500, 450, 20, p);

        p = getPaint(hairColor);
        Rect r;
        if (hairStyle == 1){ //spike
            canvas.drawRect(425,300,450,425, p);
            canvas.drawRect(460,300,480,425, p);
            canvas.drawRect(490,300,500,425, p);
        }
        else if (hairStyle == 2){ //flat
            canvas.drawRect(425,400,600,425, p);
        }
        else if (hairStyle == 3){ //curved
            canvas.drawCircle(425,400,30, p);
            canvas.drawCircle(475,400,30, p);
            canvas.drawCircle(525,400,30, p);
            canvas.drawCircle(575,400,30, p);
        }

    }

    /*
        get a paint in the sepcified color

        @param color    the color to make the paint with

        @return the paint generated by the specified color
     */
    public Paint getPaint(int color){
       Paint p = new Paint();

       //get the color components - see reference for details
        int A = (color >> 24) & 0xff; // or color >>> 24
        int R = (color >> 16) & 0xff;
        int G = (color >>  8) & 0xff;
        int B = (color      ) & 0xff;

       p.setColor(Color.rgb(R, G, B));
       return p;
    }

    /*
        select random colors for the skin, eyes, and hair as well as select a random hair style

     */
    public void randomize(){
        Random rand = new Random();
        int R;
        int G;
        int B;

        R = rand.nextInt(256); //random value between 0 and 255
        G = rand.nextInt(256);
        B = rand.nextInt(256);
        skinColor = Color.rgb(R, G, B);

        R = rand.nextInt(256);
        G = rand.nextInt(256);
        B = rand.nextInt(256);
        eyeColor = Color.rgb(R, G, B);

        R = rand.nextInt(256);
        G = rand.nextInt(256);
        B = rand.nextInt(256);
        hairColor = Color.rgb(R, G, B);

        hairStyle = rand.nextInt(3) + 1; //random value between 1 and 3

        this.invalidate();
    }

    /*
        Get the current skin color

        @return the skin color represented as an integer
     */
    public int getSkinColor() {
        return skinColor;
    }

    /*
        set the skin color

        @param skinColor    the color to set the skin
     */
    public void setSkinColor(int skinColor) {
        this.skinColor = skinColor;
    }

    /*
        Get the current eye color

        @return the eye color represented as an integer
     */
    public int getEyeColor() {
        return eyeColor;
    }

    /*
        set the eye color

        @param eyeColor    the color to set the eye
     */
    public void setEyeColor(int eyeColor) {
        this.eyeColor = eyeColor;
    }

    /*
        Get the current hair color

        @return the hair color represented as an integer
     */
    public int getHairColor() {
        return hairColor;
    }

    /*
        set the hair color

        @param hairColor    the color to set the hair style
     */
    public void setHairColor(int hairColor) {
        this.hairColor = hairColor;
    }


    /*
        Get the current hair style

        @return the hair style represented as an integer
     */
    public int getHairStyle() {
        return hairStyle;
    }

    /*
        set the hair style

        @param hairStyle    the hairstyle to use : 1 = spike; 2 = flat; 3 = curved
     */
    public void setHairStyle(int hairStyle) {
        this.hairStyle = hairStyle;
    }
}

/** External Citation   Date:     30 September 2018
 * Problem: reference for drawing on canvas
 * Resource: https://developer.android.com/reference/android/graphics/Canvas
 * Solution: used various methods here
 * */

/** External Citation   Date:     30 September 2018
 * Problem: generating random numbers
 * Resource: https://docs.oracle.com/javase/7/docs/api/java/util/Random.html
 * Solution: Random.nextInt(int exclusiveMax)
 * */

/** External Citation   Date:     30 September 2018
 * Problem: understanding the surface view
 * Resource: https://developer.android.com/reference/android/view/SurfaceView#draw(android.graphics.Canvas)
 * Solution: see the extended implementation in this class
 * */



